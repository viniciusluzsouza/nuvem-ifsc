-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/simulink_with_hdl/P1.vhd
-- Created: 2019-06-28 14:37:05
-- 
-- Generated by MATLAB 8.5 and HDL Coder 3.6
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: P1
-- Source Path: simulink_with_hdl/P1
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY P1 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Out_P1_1                          :   OUT   std_logic_vector(33 DOWNTO 0);  -- sfix34_En28
        Out_P1_2                          :   OUT   std_logic_vector(33 DOWNTO 0)  -- sfix34_En28
        );
END P1;


ARCHITECTURE rtl OF P1 IS

  -- Component Declarations
  COMPONENT C1
    PORT( InC1_1                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          InC1_2                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          OutC1_1                         :   OUT   std_logic_vector(33 DOWNTO 0)  -- sfix34_En28
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : C1
    USE ENTITY work.C1(rtl);

  -- Signals
  SIGNAL Sine_Wave_out1                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant_out1                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL C1_out1                          : std_logic_vector(33 DOWNTO 0);  -- ufix34
  SIGNAL TmpGroundAtOut_P1_2Inport1_out1  : signed(33 DOWNTO 0);  -- sfix34_En28
  SIGNAL address_cnt                      : unsigned(3 DOWNTO 0);  -- ufix4

BEGIN
  u_C1 : C1
    PORT MAP( InC1_1 => std_logic_vector(Sine_Wave_out1),  -- sfix16_En14
              InC1_2 => std_logic_vector(Constant_out1),  -- sfix16_En14
              OutC1_1 => C1_out1  -- sfix34_En28
              );

-- ADDRESS COUNTER
  Sine_Wave_addrcnt_temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      address_cnt <= to_unsigned(0, 4);
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        IF address_cnt = to_unsigned(15, 4) THEN
          address_cnt <= to_unsigned(0, 4);
        ELSE
          address_cnt <= address_cnt + 1;
        END IF;
      END IF;
    END IF; 
  END PROCESS Sine_Wave_addrcnt_temp_process1;

-- FULL WAVE LOOKUP TABLE
  PROCESS(address_cnt)
  BEGIN
    CASE address_cnt IS
      WHEN "0000" => Sine_Wave_out1 <= "0000000000000000";
      WHEN "0001" => Sine_Wave_out1 <= "0001100001111110";
      WHEN "0010" => Sine_Wave_out1 <= "0010110101000001";
      WHEN "0011" => Sine_Wave_out1 <= "0011101100100001";
      WHEN "0100" => Sine_Wave_out1 <= "0100000000000000";
      WHEN "0101" => Sine_Wave_out1 <= "0011101100100001";
      WHEN "0110" => Sine_Wave_out1 <= "0010110101000001";
      WHEN "0111" => Sine_Wave_out1 <= "0001100001111110";
      WHEN "1000" => Sine_Wave_out1 <= "0000000000000000";
      WHEN "1001" => Sine_Wave_out1 <= "1110011110000010";
      WHEN "1010" => Sine_Wave_out1 <= "1101001010111111";
      WHEN "1011" => Sine_Wave_out1 <= "1100010011011111";
      WHEN "1100" => Sine_Wave_out1 <= "1100000000000000";
      WHEN "1101" => Sine_Wave_out1 <= "1100010011011111";
      WHEN "1110" => Sine_Wave_out1 <= "1101001010111111";
      WHEN "1111" => Sine_Wave_out1 <= "1110011110000010";
      WHEN OTHERS => Sine_Wave_out1 <= "1110011110000010";
    END CASE;
  END PROCESS;


  Constant_out1 <= to_signed(16#4000#, 16);

  TmpGroundAtOut_P1_2Inport1_out1 <= to_signed(0, 34);

  Out_P1_2 <= std_logic_vector(TmpGroundAtOut_P1_2Inport1_out1);

  Out_P1_1 <= C1_out1;

END rtl;

